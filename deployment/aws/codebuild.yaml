AWSTemplateFormatVersion: '2010-09-09'
Description: A step function to deploy CFN templates

Parameters:

  RepositoryName:
    Type: String

  RepoCloneUrl:
    Type: String

  DeploymentBucket:
    Type: String

Resources:

  DeployerCodeBuild:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub "${RepositoryName}-build"
      Description: !Sub "Build ${RepositoryName}"
      Cache:
        Modes:
        - LOCAL_DOCKER_LAYER_CACHE
        Type: LOCAL
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:4.0"
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
        - Name: ACCOUNT_ID
          Type: PLAINTEXT
          Value: !Sub "${AWS::AccountId}"
        - Name: PROJECT_NAME
          Type: PLAINTEXT
          Value: !Ref RepositoryName
        - Name: DEPLOYMENT_BUCKET
          Type: PLAINTEXT
          Value: !Ref DeploymentBucket
      ServiceRole: !Ref CodebuildServiceRole
      Triggers:
        FilterGroups:
        - - Pattern: PUSH
            Type: EVENT
        Webhook: true
      Source:
        Auth:
          Type: OAUTH
        Type: GITHUB
        GitCloneDepth: 1
        Location: !Ref RepoCloneUrl
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.8
              commands:
                - pip3 install pipenv
                - . ./deployment/aws/export-branch.sh
            build:
              commands:
                - echo $BRANCH_NAME
                - mkdir _artifacts
                - mkdir _reports
                - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
                - /bin/bash deployment/aws/run-tests.sh
                - /bin/bash deployment/aws/build-dockers.sh
                - aws s3 cp _artifacts/ s3://$DEPLOYMENT_BUCKET/codebuild/$PROJECT_NAME/$BRANCH_NAME/$(date +%Y-%m-%d_%H:%M:%S)/$CODEBUILD_BUILD_ID/ --recursive
          reports:
            pytest-reports:
              files:
                - "_reports/*.xml"
              file-format: JUNITXML

  CodebuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'
      RoleName: !Sub "${RepositoryName}-build-service-role"
      Policies:
        - PolicyName: cfn-deployer-codebuild-service-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${RepositoryName}-build:*'
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:UpdateReport
                Resource:
                  - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${RepositoryName}-build-pytest-reports'
              - Effect: Allow
                Action:
                  - 's3:List*'
                Resource:
                  - !Sub 'arn:aws:s3:::${DeploymentBucket}'
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub 'arn:aws:s3:::${DeploymentBucket}/*'
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub 'arn:aws:s3:::${DeploymentBucket}/codebuild/${RepositoryName}/*'
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:BatchGetImage
                  - ecr:ListImages
                  - ecr:DescribeImages
                  - ecr:DescribeRepositories
                  - ecr:CreateRepository
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                Resource:
                  - !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${RepositoryName}/*'

Outputs:

  DeployerCodeBuild:
    Value: !Ref DeployerCodeBuild
